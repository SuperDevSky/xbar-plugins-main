#!/usr/bin/env bash

# <xbar.title>Colima</xbar.title>
# <xbar.version>v1.0</xbar.version>
# <xbar.author>Bill Havanki</xbar.author>
# <xbar.author.github>bhavanki</xbar.author.github>
# <xbar.desc>Controls the Colima container runtime</xbar.desc>
# <xbar.image>https://i.imgur.com/jnM0aMI.png</xbar.image>
# <xbar.dependencies>bash,docker,colima</xbar.dependencies>
# <xbar.abouturl>https://github.com/abiosoft/colima</xbar.abouturl>
# <xbar.var>number(MEMORY=2): Memory in GiB</xbar.var>

PATH=/usr/local/bin:$PATH
COLIMA=$(command -v colima)
DOCKER=$(command -v docker)

# https://en.wikipedia.org/wiki/Magdalena_rat
RAT_ICON=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
RAT_ICON_ON=iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAimVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSATEAAgAAABEAAABah2kABAAAAAEAAABsAAAAAAAAAJAAAAABAAAAkAAAAAF3d3cuaW5rc2NhcGUub3JnAAAAAqACAAQAAAABAAAALKADAAQAAAABAAAALAAAAAAuFBZSAAAACXBIWXMAABYlAAAWJQFJUiTwAAADCGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyIKICAgICAgICAgICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyI+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj4yODg8L2V4aWY6UGl4ZWxZRGltZW5zaW9uPgogICAgICAgICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+Mjg4PC9leGlmOlBpeGVsWERpbWVuc2lvbj4KICAgICAgICAgPGV4aWY6Q29sb3JTcGFjZT4xPC9leGlmOkNvbG9yU3BhY2U+CiAgICAgICAgIDx0aWZmOlhSZXNvbHV0aW9uPjE0NDwvdGlmZjpYUmVzb2x1dGlvbj4KICAgICAgICAgPHRpZmY6WVJlc29sdXRpb24+MTQ0PC90aWZmOllSZXNvbHV0aW9uPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8eG1wOkNyZWF0b3JUb29sPnd3dy5pbmtzY2FwZS5vcmc8L3htcDpDcmVhdG9yVG9vbD4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CjRr4ngAAAUfSURBVFgJ7ZdLrF5TFMevZ9uIZyiCJhKpEPW+MemgJCSCYuCZ0BggpkKMmOnAFBEDKgZiJA0Rr6TRIFJC0CJeaSKhmhCNaOvN7/ed/f+67+m557tfv9sguSv578faa6291trr7HPO1NQCLWTg/52BAyZwX92/56iv7IHAXvxVMFd9xCejg8dQj6NdKgd1Mft4RjsOJVN/FiU3zLjLTr0+jcB5QN4W8AaQapmGM09tndXbsfl82UzzXYHriLQMbAAef433mZ8LpNp2w5mwPbTSX894B7iw8DzyNoV3PAvbgI7+AX6vIO83cBaQEmAz28fWjWPobMY/gs1gCZCy1sz2tOE/A0vHdpW+zvDuwnuTXkqQzWwf2vqY7kbfzdZVdg6pxvUwGy+F+RNQz1uhdjZj69/xCiAl0GY2RhtnFqHzGtDobUXfeu0znLXzi566szlsmbi+Gkh1khpOq+0S0Flr7XSwCXj8loOl4Jqb9N0MLA9oJ61yCaDhdrc/d7NHc5PZlYga+WfgsKJWP3iF1dnVN8YnSGjHBNjXSHZ/gH8kkGrdhtPTJttmU8Nulnqcq7MxH1s3FVtm2htBJ4Vj4T73ASk6zWxEm2M7CjmvLB+WRJ2sjzCx13KCvZ+VOrP1+LGiZWbHym6Mv1KMWxLSuJlttPa0cWIVrOfA5+BL8BK4BoQil3lvnwzegZTRry3SkzjriXnEOblicq/O9eyfRXlBEpm14TEcA8c3kjgV6LhR249DOqlOfYscwXw58BV9NNAJX0BfgA+B5F7Zr72n8l6LM+hBZgpeX7jtqGcId0w0WmfTK/Ee8CrYDrTdBa/KO0FNfiR5978MziwLte2pw2H6kH0D8qQa7VypDu5SlKzP9ovCuVdbjVpG5/RD+hokOK/VODv06boi8BC9FKebWX8bZ09C7AWQjey9tnTQ8qj59dgr7teyvpX+USAvgSl7BpDi+OD7wIVVcqG5Ohy5y9DxTaWNbFRnT/4oqBcZdRPkV4zz8A8z/DFMozoOSNbjKEpmr0IwGyVTmY/b62Qcj8PfwzuxODPMsEJGEsYwkiLY7iLngxXD2WhcJ/vkY/ODtm8qfVR5NcrhnMBGdNSdNLN9Tsf2w8W/QRnuZLIVJHN9Dqdur0DejZKFvk0nWbOe8zysYDyg92g1uqyZ9tZwgsqNsL8d1q98JD2ufx7v2w6ga5tu1ltCWWv2WLCyyKY8ynS/dEnS5Vhf7A6XACPZBvxak3KVNLOmjXOnMU1mc1yTHPso3bospnViA1gPTgDPAsljMDJr1issPcMpvzucm+2+emd5Xsg93Eu6oOmav4p3mBjtJnBOFlq9df4uSFYMbL6z7Duh/ZZMHT+h92bSCBaBp8CNQNoIXgffAbN6EVgNJHn+OuX9r75BeGIpHYYDkp+TMLhky0X5Qh37WpbpgFJ+lunmwhteac6vBG+BZLHuvVHWAB0125bQL6CWMUPCjexdC6+Wa48NRPihvxasA36GzpBL5PCHUSYDy+H54WF2dwFf4VtAm3RcWf8gbgF+/9a0m8mSwjBDLwKfi+1AexeDe0HoaQZrymQp/V3gauD+g5Kgn0F5oIysi9zMjBmsSIAMB98j0/R+qFtqtwKzZNaeBN8CT/BTUNMpTB4AO4An9ggwoDmTjrRvCefy22T9GaToopthekongxuAp6GOgdd68haDmiJX+1OvTzyundehBOi4j0xGSBv/KsUZHZntlHTQ4BKg8wVayMBCBv4LGfgHlwbzUJzk82MAAAAASUVORK5CYII=
RAT_ICON_OFF=iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAimVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSATEAAgAAABEAAABah2kABAAAAAEAAABsAAAAAAAAAJAAAAABAAAAkAAAAAF3d3cuaW5rc2NhcGUub3JnAAAAAqACAAQAAAABAAAALKADAAQAAAABAAAALAAAAAAuFBZSAAAACXBIWXMAABYlAAAWJQFJUiTwAAADCGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyIKICAgICAgICAgICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyI+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj4yODg8L2V4aWY6UGl4ZWxZRGltZW5zaW9uPgogICAgICAgICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+Mjg4PC9leGlmOlBpeGVsWERpbWVuc2lvbj4KICAgICAgICAgPGV4aWY6Q29sb3JTcGFjZT4xPC9leGlmOkNvbG9yU3BhY2U+CiAgICAgICAgIDx0aWZmOlhSZXNvbHV0aW9uPjE0NDwvdGlmZjpYUmVzb2x1dGlvbj4KICAgICAgICAgPHRpZmY6WVJlc29sdXRpb24+MTQ0PC90aWZmOllSZXNvbHV0aW9uPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8eG1wOkNyZWF0b3JUb29sPnd3dy5pbmtzY2FwZS5vcmc8L3htcDpDcmVhdG9yVG9vbD4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CjRr4ngAAAUpSURBVFgJ7ZhJiF1FFIbbMQniEDFiSIwIElGIItq4UVBBQZwXGhE0KkRxKyqC4M5euHUAF9pBXIgLCUpwAknAgSjiEAdEJKBoDDgEMc7T971b/+vq6+3X7+V1UKF/+G9VnTrn1Dmn6ta73RMTi1iswP+7AgeMEb62fw1pr+6B0Fb+WTisPerj4eARzBNol8lBXcJBMrMdBanUH8XIBdPv8lPPn4HC2VDZ2/A1KGqdRrJAz7qqG/H5TFlM912JG4hYDV+Bbn/NDxmvg6L23UjGfB5a2W+mvweeVWRueRuRrWDiO2igN8JVcCW8Cn4DlZ8CRRJsRvv4dOE4Oo2+i++Ay6DIXDOaeaZiTyEyqBNmpvq9w+h9D98skiTZVxi1k0W1ux268LSDgkPSabVZeDlybabKvEk6J5PwzfTVGbvKCWYJzl4qTm+iFZ7XuSrrfOZOp28wlykEdQGSlLs2l07PqP2onWTOYH+DJ8Pt0Gro2KPg3O9w0M3AdA97S3t0aROkQ5PyLj7KAfBo7BNS2XOwNvOPoWdN1C9eI+l+1jfG56i8UanpX0bnSfomnzUiRzQ/Uu1sk9dOqjJssFklvtYjMPEHMlG1d5e5u4osNpXK3N2cO7fIK8stOrKop+plOHSTZO/BwqC/hU/ATdDKK3sYCis7UnXj/AUMdeSREKNWtrGaeSaIcxFtgV9Dr8atMC8j3dGCTQVvwdBgp/QAxgnWHXOLs3P664LzWT/zysIUMnP9zHyTdxWeSGvgVsd2FBikNvUtcgTjtXAN9G42CKv8CXwXCtfKeu011fdGmYX7GKl4TZG2s56l3DHQaV1Nr8Q74ItwN9R3F70qb4U1Jhl49z8PTy0Tte+JwxH6kn0B86aa7bCok7sQo+egFakDdOzdXrPWMTjjEJ/B2HqtJth+TFcXhftpRYJuRoOfCXYVas/CLGT7KzRAj0ctr/v+CP1S5nfSPgSVJTF1//GzPY3QifOgGDbg6F2EzQ9QH1morp7y+ahddLRNkp/Sz8vfr/AHCM1qBRSex/mQyno1ZaFUKuNRW4NM4AnYa3BlCSZHo6dkJhH0MymK7SZ6vlhxnIVGDXKQfny+045No/eqqOYLODuwDRttx63soKDjOz/tvWO4l0V3wlRuUMA5t5eUYFOFQYuOM+d5zvuwjn4Pb/HU6ZpmOPAMJ6ncCPs7YOPytrF9xPjc3tftAP/OEqliM5p5quuZPQbmWyPHY0Zr4Xsp0sW4Xqr7C6AZ7IL5oM5VgqiPBHcSklQ226X9/mJ9LCYN4mW4GR4H/aAWboOZWW2vsLR0J/zucGy1B513phcEruFa4symab74/cvAKm2H/j3WBc+5f+Wmmia20FX2N6H9K5lz/KjRW0kzWAI3wWuh2Aa3wq+gVfW/NpdDocw/a/L7r71JuGM5OnR7UJ6dMLlUy0nlUhvbWpdhDzl+HtMdRda/0hxfCl+FqWLdeqNsgAZqtT1CP8NaxwpJF7J1LrJar903Efk0nILT0M/QWXrJHHk/y1RgLTI/PKzuj9Cf8PdhGwau7pXweuj3b42fGCwrAiu0Bfpe7Ib6Ox/eCYPH6Wwog2Npb4NXQNfvHQnaWcgLZWZdcDErZrIyCdLtfY9M0vqh7lG7AVolq/YY/BK6gx/BGsczuBfuge7Yg9CEhoaBtG8Jx8rb8PyZpOzCdQjdpdVwPXQ3tDHx2k7ZUlgjenU89fzY/Tp4A0qC9gfBYgT6+FeRYAxkrl0yQJNLgo4XsViBxQr8FyrwN+Wv0E/7UWGlAAAAAElFTkSuQmCC


icon=$RAT_ICON
running=2
if [[ -n $COLIMA ]]; then
  colima_status=$("$COLIMA" status 2>&1)
  if [[ $colima_status =~ "colima is running" ]]; then
    icon=$RAT_ICON_ON
    running=0
  elif [[ $colima_status =~ "colima is not running" ]]; then
    icon=$RAT_ICON_OFF
    running=1
  fi
fi

echo "| templateImage=${icon}"
echo '---'
if [[ -z $COLIMA ]]; then
  echo "Colima not found"
  exit
fi
# Set custom mounts with --mount /path/to/mount
echo -n 'Start Colima | shell="'"$COLIMA"'" param1=start param2=--memory param3='"$MEMORY"' terminal=true'
if (( running == 0 )); then
  echo " disabled=true"
else
  echo
fi
echo -n 'Stop Colima | shell="'"$COLIMA"'" param1=stop terminal=true'
if (( running == 1 )); then
  echo " disabled=true"
else
  echo
fi

if (( running == 0 )); then
  containers=()
  while IFS= read -r line; do
    containers+=( "$line" )
  done < <("$DOCKER" ps --format '{{.Names}} {{.ID}}' | sort)

  echo "Containers"
  if (( ${#containers[@]} == 0 )); then
    echo "-- none"
  else
    for c in "${containers[@]}"; do
      echo -n "-- ${c}"
      if [[ -n $DOCKER ]]; then
        echo '| shell="'"$DOCKER"'" param1=logs param2="'"${c##* }"'" param3="-f" terminal=true'
      fi
    done
  fi
fi

echo "$("$COLIMA" version | grep 'colima version') | disabled=true"
